round(iv.results[[1]],3)
round(ols.results[[1]],3)
round(ols.results[[2]],3)
round(iv.results[[2]],3)
round(iv.results[[3]],3)
round(ols.results[[3]],3)
round(iv.results[[4]],3)
round(ols.results[[4]],3)
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
install.packages('foreign')
## ECON641: PROBLEM SET 2
## Q1: THE FIRM SIZE DISTRIBUTION
## Anirudh Yadav
## 12/07/2018
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
library(foreach)            #for looping
library(data.table)         #for data manipulation
library(Matrix)             #fast matrix calcs
library(ggplot2)            #for pretty plots
library(sandwich)           #for variance-covariance estimation
library(xtable)             #for latex tables
library(foreign)            #for reading Stata dta files
options(scipen = 999)       #forces R to use normal numbers instead of scientific notation
######################################################################
# Input data
######################################################################
setwd("/Users/Anirudh/Desktop/GitHub/PhD_Coursework/ECON641/HW2")
data = as.data.table(read.dta('PanelAnnual_compustat1980_2015.dta'))
install.packages("readstata13")
## ECON641: PROBLEM SET 2
## Q1: THE FIRM SIZE DISTRIBUTION
## Anirudh Yadav
## 12/07/2018
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
library(foreach)            #for looping
library(data.table)         #for data manipulation
library(Matrix)             #fast matrix calcs
library(ggplot2)            #for pretty plots
library(sandwich)           #for variance-covariance estimation
library(xtable)             #for latex tables
library(readstata13)        #for reading Stata dta files
options(scipen = 999)       #forces R to use normal numbers instead of scientific notation
######################################################################
# Input data
######################################################################
setwd("/Users/Anirudh/Desktop/GitHub/PhD_Coursework/ECON641/HW2")
data = as.data.table(read.dta('PanelAnnual_compustat1980_2015.dta'))
## ECON641: PROBLEM SET 2
## Q1: THE FIRM SIZE DISTRIBUTION
## Anirudh Yadav
## 12/07/2018
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
library(foreach)            #for looping
library(data.table)         #for data manipulation
library(Matrix)             #fast matrix calcs
library(ggplot2)            #for pretty plots
library(sandwich)           #for variance-covariance estimation
library(xtable)             #for latex tables
library(readstata13)        #for reading Stata dta files
options(scipen = 999)       #forces R to use normal numbers instead of scientific notation
## ECON641: PROBLEM SET 2
## Q1: THE FIRM SIZE DISTRIBUTION
## Anirudh Yadav
## 12/07/2018
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
library(foreach)            #for looping
library(data.table)         #for data manipulation
library(Matrix)             #fast matrix calcs
library(ggplot2)            #for pretty plots
library(sandwich)           #for variance-covariance estimation
library(xtable)             #for latex tables
library(readstata13)        #for reading Stata dta files
options(scipen = 999)       #forces R to use normal numbers instead of scientific notation
######################################################################
# Input data
######################################################################
setwd("/Users/Anirudh/Desktop/GitHub/PhD_Coursework/ECON641/HW2")
data = as.data.table(read.dta13('PanelAnnual_compustat1980_2015.dta'))
View(data)
# Create 1 digit SIC codes
data[,sic1:= "A"]
data[,sic1:=1]
data[,sic1:="B"]
data[,sic:=NULL]
?ones
x = rep(1,length(data[,sic1])
x = rep(1,length(data[,sic1])
?rep
x = rep(1,length(data[,sic])
x = rep(1,length(data[,sic]))
data[,sic]
View(data)
## ECON641: PROBLEM SET 2
## Q1: THE FIRM SIZE DISTRIBUTION
## Anirudh Yadav
## 12/07/2018
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
library(foreach)            #for looping
library(data.table)         #for data manipulation
library(Matrix)             #fast matrix calcs
library(ggplot2)            #for pretty plots
library(sandwich)           #for variance-covariance estimation
library(xtable)             #for latex tables
library(readstata13)        #for reading Stata dta files
options(scipen = 999)       #forces R to use normal numbers instead of scientific notation
######################################################################
# Input data & create new variables
######################################################################
setwd("/Users/Anirudh/Desktop/GitHub/PhD_Coursework/ECON641/HW2")
data = as.data.table(read.dta13('PanelAnnual_compustat1980_2015.dta'))
x = rep(1,length(data[,sic]))
# Create 1 digit SIC codes
sic1 = numeric()
# Create 1 digit SIC codes
sic1 = rep(0,length(data[,sic]))
rm(x)
sic1>=1
# Create 1 digit SIC codes
sic1 = rep(0,length(data[,sic]))
for (i in 1:length(sic1)){
if       (data[,sic]>0 & data[,sic]<1000){sic[i]=1}
else if  (data[,sic]>=1000 & data[,sic]<2000){sic[i]=2}
else if  (data[,sic]>=2000 & data[,sic]<4000){sic[i]=3}
else if  (data[,sic]>=4000 & data[,sic]<5000){sic[i]=4}
else if  (data[,sic]>=5000 & data[,sic]<6000){sic[i]=5}
else if  (data[,sic]>=6000 & data[,sic]<7000){sic[i]=6}
else if  (data[,sic]>=5000 & data[,sic]<6000){sic[i]=7}
else if  (data[,sic]>=7000 & data[,sic]<8000){sic[i]=8}
else {sic[i]=10}
}
# Create 1 digit SIC codes
sic1 = rep(0,length(data[,sic]))
for (i in 1:length(sic1)){
if       (data[,sic]>0 & data[,sic]<1000){sic1[i]=1}
else if  (data[,sic]>=1000 & data[,sic]<2000){sic1[i]=2}
else if  (data[,sic]>=2000 & data[,sic]<4000){sic1[i]=3}
else if  (data[,sic]>=4000 & data[,sic]<5000){sic1[i]=4}
else if  (data[,sic]>=5000 & data[,sic]<6000){sic1[i]=5}
else if  (data[,sic]>=6000 & data[,sic]<7000){sic1[i]=6}
else if  (data[,sic]>=5000 & data[,sic]<6000){sic1[i]=7}
else if  (data[,sic]>=7000 & data[,sic]<8000){sic1[i]=8}
else {sic1[i]=10}
}
?cut
# Create 1 digit SIC codes
data[,sic1:=cut(sic,c(1000,2000,4000,5000,6000,7000,9000))]
View(data)
## ECON641: PROBLEM SET 2
## Q1: THE FIRM SIZE DISTRIBUTION
## Anirudh Yadav
## 12/07/2018
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
library(foreach)            #for looping
library(data.table)         #for data manipulation
library(Matrix)             #fast matrix calcs
library(ggplot2)            #for pretty plots
library(sandwich)           #for variance-covariance estimation
library(xtable)             #for latex tables
library(readstata13)        #for reading Stata dta files
options(scipen = 999)       #forces R to use normal numbers instead of scientific notation
######################################################################
# Input data & create new variables
######################################################################
setwd("/Users/Anirudh/Desktop/GitHub/PhD_Coursework/ECON641/HW2")
data = as.data.table(read.dta13('PanelAnnual_compustat1980_2015.dta'))
# Create 1 digit SIC codes
data[,sic1:=cut(sic,c(1000,2000,4000,5000,6000,7000,9000),labels=(1,2,3,4,5,6,7,8,9,10))]
# Create 1 digit SIC codes
data[,sic1:=cut(sic,c(1000,2000,4000,5000,6000,7000,9000,10000),labels=(1,2,3,4,5,6,7,8,9,10))]
# Create 1 digit SIC codes
data[,sic1:=cut(sic,c(1000,2000,4000,5000,6000,7000,9000,10000),labels=c(1,2,3,4,5,6,7,8,9,10))]
# Create 1 digit SIC codes
data[,sic1:=cut(sic,c(0,999,1999,3999,4999,5999,6999,8999,9999),labels=c(1,2,3,4,5,6,7,8))]
# Create 1 digit SIC codes
data[,sic1:=cut(sic,c(0,999,1999,3999,4999,5999,6999,8999,9999),labels=c("Ag","MinCon","Man","Tran","WRTrade","Fin","Serv","Pub"))]
## ECON641: PROBLEM SET 2
## Q1: THE FIRM SIZE DISTRIBUTION
## Anirudh Yadav
## 12/07/2018
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
library(foreach)            #for looping
library(data.table)         #for data manipulation
library(Matrix)             #fast matrix calcs
library(ggplot2)            #for pretty plots
library(sandwich)           #for variance-covariance estimation
library(xtable)             #for latex tables
library(readstata13)        #for reading Stata dta files
options(scipen = 999)       #forces R to use normal numbers instead of scientific notation
######################################################################
# Input data & create new variables
######################################################################
setwd("/Users/Anirudh/Desktop/GitHub/PhD_Coursework/ECON641/HW2")
data = as.data.table(read.dta13('PanelAnnual_compustat1980_2015.dta'))
# Create 1 digit SIC codes
data[,sic1:=cut(sic,c(0,999,1999,3999,4999,5999,6999,8999,9999),labels=c("Ag","MinCon","Man","Tran","WRTrade","Fin","Serv","Pub"))]
data15 = data[fyear=2015]
data15 = data[fyear=2015,]
data15 = data[fyear==2015]
View(data15)
# 2015 & 1985 data
data15 = data[fyear==2015]
data85 = data[fyear==1985]
rm(data)
View(data15)
o = c(4,5,6,65)
rank(o)
rank(x1 <- c(3, 1, 4, 15, 92))
rank(x1 <- -1*c(3, 1, 4, 15, 92))
list?
list(data15,data85)
o=list(data15,data85)
View(o)
# Generate rankings
data15[rsales=rank(-1*sale)]
# Generate rankings
rsales  = rank(-1*data15[,sale])
# Generate rankings
data = list(data15,data85)
rsales  = sapply(1:2,function(i) rank(-1*data[[i]][,sale]))
View(rsales)
remp    = sapply(1:2,function(i) rank(-1*data[[i]][,emp]))
View(remp)
rsales  = sapply(1:2,function(i) rank(-1*data[[i]][,sale],na.last = NA))
remp    = sapply(1:2,function(i) rank(-1*data[[i]][,emp],na.last = NA))
log(data[[1]][,sale])
?log()
o = log(data[[1]][,sale])
o >=0
logemp    = sapply(1:2,function(i) log(data[[i]][,emp]))
# Log variables
logsales  = sapply(1:2,function(i) log(data[[i]][,sale]))
plot(logsales[[1]],rsales[[1]])
View(logsales)
View(rsales)
View(remp)
View(rsales)
View(remp)
rsales  = sapply(1:2,function(i) rank(-1*data[[i]][,sale],na.last = NA))
View(rsales)
rsales  = sapply(1:2,function(i) rank(-1*data[[i]][,sale]))
View(rsales)
View(data15)
length(data15[sale=0])
length(data15[sale==0])
View(rsales)
View(rsales)
View(logsales)
View(remp)
View(rsales)
View(remp)
View(remp)
View(rsales)
rsales  = sapply(1:2,function(i) rank(-1*data[[i]][,sale]))
remp    = sapply(1:2,function(i) rank(-1*data[[i]][,emp]))
View(rsales)
View(remp)
View(remp)
remp    = sapply(1:2,function(i) rank(-1*data[[i]][,emp]))
View(remp)
View(logemp)
View(logsales)
View(remp)
?plot()
ggplot()
?ggplot()
View(remp)
View(rsales)
View(logsales)
View(logemp)
# Add varaibles back into FY15 and FY85 datasets
data15[rsles := rsales[[1]]]
# Add varaibles back into FY15 and FY85 datasets
data15[rsales := rsales[[1]]]
# Add varaibles back into FY15 and FY85 datasets
data15[,rsales := rsales[[1]]]
data85[,rsales := rsales[[2]]]
# Add varaibles back into FY15 and FY85 datasets
data15[,c(rsales,remp) := c(rsales[[1]],remp[[1]])]
# Add varaibles back into FY15 and FY85 datasets
data15[,c(rsales,remp) := c(rsales[[1]],remp[[1]])]
# Add varaibles back into FY15 and FY85 datasets
data15[,(rsales,remp) := c(rsales[[1]],remp[[1]])]
## ECON641: PROBLEM SET 2
## Q1: THE FIRM SIZE DISTRIBUTION
## Anirudh Yadav
## 12/07/2018
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
library(foreach)            #for looping
library(data.table)         #for data manipulation
library(Matrix)             #fast matrix calcs
library(ggplot2)            #for pretty plots
library(sandwich)           #for variance-covariance estimation
library(xtable)             #for latex tables
library(readstata13)        #for reading Stata dta files
options(scipen = 999)       #forces R to use normal numbers instead of scientific notation
######################################################################
# Input data & create new variables
######################################################################
setwd("/Users/Anirudh/Desktop/GitHub/PhD_Coursework/ECON641/HW2")
data = as.data.table(read.dta13('PanelAnnual_compustat1980_2015.dta'))
# Create 1 digit SIC codes
data[,sic1:=cut(sic,c(0,999,1999,3999,4999,5999,6999,8999,9999),labels=c("Ag","MinCon","Man","Tran","WRTrade","Fin","Serv","Pub"))]
data[,rsale:= rank(-sale)]
## ECON641: PROBLEM SET 2
## Q1: THE FIRM SIZE DISTRIBUTION
## Anirudh Yadav
## 12/07/2018
######################################################################
# Load packages, clear workspace
######################################################################
rm(list = ls())             #clear workspace
library(foreach)            #for looping
library(data.table)         #for data manipulation
library(Matrix)             #fast matrix calcs
library(ggplot2)            #for pretty plots
library(sandwich)           #for variance-covariance estimation
library(xtable)             #for latex tables
library(readstata13)        #for reading Stata dta files
options(scipen = 999)       #forces R to use normal numbers instead of scientific notation
######################################################################
# Input data & create new variables
######################################################################
setwd("/Users/Anirudh/Desktop/GitHub/PhD_Coursework/ECON641/HW2")
data = as.data.table(read.dta13('PanelAnnual_compustat1980_2015.dta'))
# Create 1 digit SIC codes
data[,sic1:=cut(sic,c(0,999,1999,3999,4999,5999,6999,8999,9999),labels=c("Ag","MinCon","Man","Tran","WRTrade","Fin","Serv","Pub"))]
data[,`:=`(rsales=rank(-sale), remp=rank(-emp), logsale=log(sale),logemp=log(emp)), by=fyear]
warnings()
# Keep only 2015 & 1985 data
data=data[fyear==2015|fyear==1985]
View(data)
head(data)
length(data[fy==2015])
length(data[fy==2015,rsale])
length(data[fy==2015,rsales])
length(data[fyear==2015,rsales])
exp(5)
ggplot(data[fyear==2015 & rsales <= 1000],aes(x=logsale,y=rsales))
ggplot(data[fyear==2015 & rsales <= 1000],aes(x=logsale,y=rsales))+geom_point()
ggplot(data[fyear==2015 & rsales <= 150],aes(x=logsale,y=rsales))+geom_point()
ggplot(data[fyear==2015 & rsales <= 1000],aes(x=logsale,y=rsales))+geom_point()
ggplot(data[fyear==2015 & rsales <= 1000],aes(x=logsale,y=log(rsales))+geom_point()
ggplot(data[fyear==2015 & rsales <= 1000],aes(x=logsale,y=log(rsales)))+geom_point()
ggplot(data[fyear==2015 & rsales <= 1000],aes(x=logsale,y=rsales))+geom_point()
ggplot(data[fyear==2015],aes(x=logsale,y=rsales))+geom_point()
ggplot(data[fyear==2015],aes(x=logsale,y=log(rsales)))+geom_point()
ggplot(data[fyear==2015& rsales<100],aes(x=logsale,y=log(rsales)))+geom_point()
ggplot(data[fyear==1985& rsales<100],aes(x=logsale,y=log(rsales)))+geom_point()
ggplot(data[fyear==1985&],aes(x=logsale,y=log(rsales)))+geom_point()
ggplot(data[fyear==1985],aes(x=logsale,y=log(rsales)))+geom_point()
ggplot(data[fyear==2015],aes(x=logsale,y=log(rsales)))+geom_point()
ggplot(data[fyear==2015 & rsales<500],aes(x=logsale,y=log(rsales)))+geom_point()
# Plot 1 -- full sample for 2015
p2015.full = ggplot(data[fyear==2015],aes(x=logsale,y=log(rsales)))+geom_point()
# Plot 1 -- full sample for 2015
p2015.full = ggplot(data[fyear==2015],aes(x=logsale,y=log(rsales)))+
geom_point()
# Plot 1 -- full sample for 2015
p2015.full = ggplot(data[fyear==2015],aes(x=logsale,y=log(rsales)))+
geom_point()+
ggtitle("Size Distribution of All Compustat Firms in 2015")+
xlab("ln(Sales)")+ylab("log(Rank)")
p2015.full
# Plot 1 -- full sample for 2015
p2015.full = ggplot(data[fyear==2015],aes(x=logsale,y=log(rsales)))+
geom_point()+
ggtitle("Size Distribution of All Compustat Firms in 2015")+
theme(plot.title = element_text(hjust = 0.5))+
xlab("log(Sales)")+ylab("log(Rank)")
p2015.full
# Plot 2 - top 500 firms in 2015
p2015.500 = ggplot(data[fyear==2015 & rsales<=500],aes(x=logsale,y=log(rsales)))+
geom_point()+
ggtitle("Size Distribution of All Compustat Firms in 2015")+
theme(plot.title = element_text(hjust = 0.5))+
xlab("log(Sales)")+ylab("log(Rank)")
p2015.500
# Plot 3 - top 100 firms in 2015
p2015.100 = ggplot(data[fyear==2015 & rsales<=500],aes(x=logsale,y=log(rsales)))+
geom_point()+
ggtitle("Size Distribution of Top 100 Compustat Firms in 2015")+
theme(plot.title = element_text(hjust = 0.5))+
xlab("log(Sales)")+ylab("log(Rank)")
p2015.100
# Plot 1 -- full sample in 2015
p2015.full = ggplot(data[fyear==2015],aes(x=logsale,y=log(rsales)))+
geom_point()+
#ggtitle("Size Distribution of All Compustat Firms in 2015")+
#theme(plot.title = element_text(hjust = 0.5))+
xlab("log(Sales)")+ylab("log(Rank)")
# Plot 2 -- top 500 firms in 2015
p2015.500 = ggplot(data[fyear==2015 & rsales<=500],aes(x=logsale,y=log(rsales)))+
geom_point()+
#ggtitle("Size Distribution of Top 500 Compustat Firms in 2015")+
#theme(plot.title = element_text(hjust = 0.5))+
xlab("log(Sales)")+ylab("log(Rank)")
# Plot 3 -- top 100 firms in 2015
p2015.100 = ggplot(data[fyear==2015 & rsales<=500],aes(x=logsale,y=log(rsales)))+
geom_point()+
#ggtitle("Size Distribution of Top 100 Compustat Firms in 2015")+
#theme(plot.title = element_text(hjust = 0.5))+
xlab("log(Sales)")+ylab("log(Rank)")
ggsave("2015-sales-full.pdf",p2015.full)
ggsave("2015-sales-100.pdf",p2015.100)
ggsave("2015-sales-500.pdf",p2015.500)
ggplot(data[fyear==2015 & rsales<=500],aes(x=logsale,y=log(rsales)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015],aes(x=logsale,y=log(rsales)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & rsales<=500],aes(x=logsale,y=log(rsales)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
# Create industry-level rankings
data[,`:=`(rsales.ind=rank(-sale), remp=rank(-emp)), by=.(fyear,sic1)]
# Create additional variables, by fyear
data[,`:=`(rsales=rank(-sale), remp=rank(-emp), logsale=log(sale),logemp=log(emp)), by=fyear]
# Create industry-level rankings
data[,`:=`(rsales.ind=rank(-sale), remp.ind=rank(-emp)), by=.(fyear,sic1)]
ggplot(data[fyear==2015 & rsales.ind<=500],aes(x=logsale,y=log(rsales)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & rsales.ind<=100],aes(x=logsale,y=log(rsales)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & rsales.ind<=500],aes(x=logsale,y=log(rsales.ind)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & rsales.ind<=100],aes(x=logsale,y=log(rsales.ind)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & rsales.ind<=500],aes(x=logsale,y=log(rsales.ind)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & rsales.ind<=50],aes(x=logsale,y=log(rsales.ind)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & rsales.ind<=50 & sic1!="Ag"],aes(x=logsale,y=log(rsales.ind)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & rsales.ind<=50 & sic1!="Ag" & sic1!="Pub"],aes(x=logsale,y=log(rsales.ind)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & sic1!="Ag" & sic1!="Pub"],aes(x=logsale,y=log(rsales.ind)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
ggplot(data[fyear==2015 & rsales.ind<=50 & sic1!="Ag" & sic1!="Pub"],aes(x=logsale,y=log(rsales.ind)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)") + facet_wrap(~sic1)
# Plot 3 -- top 100 firms
p2015.100 = ggplot(data[fyear==2015 & rsales<=100],aes(x=logsale,y=log(rsales)))+
geom_point()+
xlab("log(Sales)")+ylab("log(Rank)")
ggsave("2015-sales-100.pdf",p2015.100)
?lm()
lm(log(rsales-0.5) ~ logsale,data[fyear==2015])
lm(log(rsales-0.5) ~ logsale,data[fyear==2015 & logsale!=-Inf])
lm(log(rsales-0.5) ~ logsale,data[fyear==2015 & logsale!=-Inf & rsale<=100])
lm(log(rsales-0.5) ~ logsale,data[fyear==2015 & logsale!=-Inf & rsales<=100])
lm(log(rsales-0.5) ~ logsale,data[fyear==2015 & logsale!=-Inf & rsales<=500])
sales.regs = lapply(1:3,function(i) lm(log(rsales-0.5)~logsale,data[fyear==2015 & rsales<=cutoffs[i]]))
cutoffs = c(10000,500,100)
sales.regs = lapply(1:3,function(i) lm(log(rsales-0.5)~logsale,data[fyear==2015 & rsales<=cutoffs[i]]))
sales.regs = lapply(1:3,function(i) lm(log(rsales-0.5)~logsale,data[fyear==2015 & rsales<=cutoffs[i] & logsale!=-Inf]))
sales.betas = sapply(1:3, function(i) sales.regs[[i]]$coef[2])
summary(sales.regs[[2]])
summary(sales.regs[[1]])$coefficients
summary(sales.regs[[1]])$coefficients[,2]
summary(sales.regs[[1]])$coefficients[,2][2]
length(data[fyear==2015])
length(data[fyear==2015,rsales])
sales.gabaixSE = sapply(1:3, function(i) sqrt(2/cutoffs[i])*sales.betas[i])
sales.olsSE = sapply(1:3, function(i) summary(sales.regs[[i]])$coefficients[,2][2])
sales.gabaixSE = sapply(1:3, function(i) sqrt(2/cutoffs[i])*abs(sales.betas[i]))
# Combind results
sales.results = rbind(c("Full", "Top 500", "Top 100"),sales.betas,sales.gabaixSE)
xtable(sales.results)
xtable(sales.results,digits=c(0,3,3,3))
xtable(sales.results,digits=c(0,3,3))
xtable(sales.results,digits=c(0,2,2,2))
# Combind results
sales.results = rbind(sales.betas,sales.gabaixSE)
colnames(sales.results) = c("Full", "Top 500", "Top 100")
xtable(sales.results)
